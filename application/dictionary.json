{
  "info_messages": {

  },
  "error_messages": {
    "error_db_creation": "{\"success\": false, \"error\": \"{error_msg}\"}",
   "error_load": "{\"success\": false, \"error\": \"{error_msg}\"}",
   "error_add": "{\"success\": false, \"error\": \"{error_msg}\"}",
   "error_update": "{\"success\": false, \"error\": \"{error_msg}\"}",
   "error_delete": "{\"success\": false, \"error\": \"{error_msg}\"}",
   "error_duplicate": "{\"success\": false, \"error\":  \"duplicate object\"}",
    "warning_delete": "{\"success\": False, \"error\": \"Warinig! not deleted\"}",
   "warning_update": "{\"success\": False, \"error\": \"Warinig! not updated\"}",
   "warning_add": "{\"success\": False, \"error\": \"Warinig! not add\"}"
  },
  "current_status_messages": {
    "open_index": "index.html loading",
    "open_manage_users": "manage_users.html loading",
    "open_manage_vm": "manage_vm.html loading",
    "updating_proc": "updating_proc",
    "deleting_proc": "deleting_proc",
    "saving_user": "saving_user",
    "deleting_user": "deleting_user",
    "updating_user": "updating_user",
    "updating_vm": "updating_vm",
    "saving_vm": "saving_vm",
    "loading _vm": "loading _vm",
    "deleting_vm": "deleting_vm",
    "dbs_init":"error! dbs_init fail",
    "error_duplicate":"error! duplicate object"
  },
  "sql": {
    "load_users": "SELECT name, status, range, permissions FROM users",
    "add_user": "INSERT INTO users(name, status, range, password, permissions) VALUES (?, ?, ?, ?, ?)",
    "delete_user": "DELETE FROM users WHERE name = ?",
    "update_user": "REPLACE INTO users(name, status,range,password, permissions) VALUES ( ?, ?, ?, ?, ?)",
    "check_user_exists": "SELECT 1 FROM users WHERE name=?",
    "load_stands": "SELECT ip, name, status,monitoring,category FROM vms",
    "check_stand_exists": "SELECT 1 FROM vms WHERE ip=?",
    "save_stand": "INSERT INTO vms(ip, name, status,monitoring,category,ssh_user,ssh_password,ssh_port) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?)",
    "load_stands_ssh": "SELECT * FROM vms",
    "update_stand": "REPLACE  INTO vms(ip, name, status,monitoring,category,ssh_user,ssh_password,ssh_port) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    "update_process": "REPLACE  INTO processes(ip, name, version,monitoring_period,logs_path) VALUES ( ?, ?, ?, ?, ?) ",
    "delete_stand_ip": "DELETE FROM vms WHERE ip=?",
    "delete_monitoring_reestr_ip": "DELETE FROM reestr WHERE ip=?",
    "add_proc_to_processes": "INSERT OR IGNORE INTO processes(ip, name, version,monitoring_period,logs_path) VALUES ( ?, ?, ?, ?, ?) ",
    "select_processes_name_by_ip": "SELECT name FROM processes WHERE ip=?",
    "select_all_tables": "SELECT name FROM sqlite_master WHERE type='table';",
    "get_processes_from_monitoring": "SELECT name, version, monitoring_period, logs_path FROM processes WHERE ip=?",
    "get_all_processes_from_monitoring": "SELECT * FROM processes",
    "delete_proc": "DELETE FROM processes WHERE ip=? and name=?"
  },
  "path": {
    "DATABASE_VMS" : "\\db\\vms.db",
"DATABASE_VMS_SCHEMA" : "\\db\\vms_schema.sql",
"DATABASE_USERS" : "\\db\\users.db",
"DATABASE_PROC" : "\\db\\db_monitoring",
"DATABASE_USERS_SCHEMA" : "\\db\\users_schema.sql",
"SCRIPTS_SCHEMA" :"\\db\\scripts_schema.sql",
"PROCESSES_SCHEMA":"\\db\\processes_schema.sql"
  },
  "commands": {
    "get_proc_loads": "pids=$(pidof -x {proc}); [ -n \"$pids\" ] && ps -p $pids -o %cpu,%mem --no-header | awk '{{cpu+=$1; mem+=$2}} END {{print cpu, mem}}' || echo \"0 0\""
      }
}